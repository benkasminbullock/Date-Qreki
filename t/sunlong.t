use warnings;
use strict;
use utf8;
use FindBin '$Bin';
use Test::More;
my $builder = Test::More->builder;
binmode $builder->output,         ":utf8";
binmode $builder->failure_output, ":utf8";
binmode $builder->todo_output,    ":utf8";
binmode STDOUT, ":encoding(utf8)";
binmode STDERR, ":encoding(utf8)";
use Date::Calc qw!Mktime Date_to_Time!;
use Date::Qreki;
use Astro::Coord::ECI::Sun;
use Astro::Coord::ECI::Utils qw{ deg2rad rad2deg };
my $time1 = Date_to_Time (2000, 2, 1, 0, 0, 0);
my $time2 = Date_to_Time (2000, 2, 1, 12, 0, 0);
my $loc =  Date::Qreki::sunlong ($time2);
print "$loc\n";

my $lat = 35.018691;
my $long = 135.747955;
my $station = Astro::Coord::ECI->new (name => 'Nijo castle, Kyoto');
$station->geodetic (deg2rad ($lat), deg2rad ($long), 20 / 1000);
my $sun = Astro::Coord::ECI::Sun->new (station => $station);
$sun->universal ($time1);
my ($azim, $elev, $range) = $sun->azel ();
print rad2deg ($azim), "\n";
done_testing ();
